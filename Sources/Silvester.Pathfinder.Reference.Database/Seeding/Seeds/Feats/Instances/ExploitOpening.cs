using Silvester.Pathfinder.Reference.Database.Models.Entities;
using Silvester.Pathfinder.Reference.Database.Models.Prerequisites.Builders;
using Silvester.Pathfinder.Reference.Database.Models.Prerequisites.Instances;
using Silvester.Pathfinder.Reference.Database.Utilities.Text;
using System;
using System.Collections.Generic;

namespace Silvester.Pathfinder.Reference.Database.Seeding.Seeds.Feats.Instances
{
    public class ExploitOpening : Template
    {
        public static readonly Guid ID = Guid.Parse("3bff7e8c-7809-4a46-9550-c00d57f5d3e8");

        protected override Feat GetFeat()
        {
            return new Feat
            {
                Id = ID,
                Name = "Exploit Opening",
                Level = 6,
                ActionTypeId = ActionTypes.Instances.Reaction.ID,
                CanBeLearnedMoreThanOnce = false,
                Special = null,
                Trigger = "Your spotter critically succeeds at a Strike against a creature, and that creature is within your ranged weapon's first range increment.",
                Frequency = null
            };
        }

        protected override IEnumerable<TextBlock> GetDetailBlocks()
        {
            yield return new TextBlock { Id = Guid.Parse("15881136-7ea7-4498-b812-16b815753c26"), Type = TextBlockType.Text, Text = "You take advantage of your spotter’s devastating attack to unleash your own follow-up attack. Make a ranged (action: Strike) with a –2 penalty against the target of the triggering attack. This (action: Strike) doesn’t count toward your multiple attack penalty and your multiple attack penalty doesn’t apply to the (action: Strike)." };
        }

        protected override void GetPrerequisites(BooleanPrerequisiteBuilder builder)
        { 
            
            builder.HaveSpecificFeat(Guid.Parse("5e180d20-c37e-44bd-9875-077f2f83bd9d"), Feats.Instances.SnipingDuoDedication.ID);
        }

        protected override IEnumerable<Guid> GetTraits()
        {
            yield break;   
        }            

        protected override SourcePage GetSourcePage()
        {
            return new SourcePage
            {
                Id = Guid.Parse("da3b5304-b898-47d4-9bf2-fb8aec101d0b"),
                SourceId = Sources.Instances.GunsAndGears.ID,
                Page = -1
            };
        }
    }
}
